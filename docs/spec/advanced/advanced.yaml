openapi: 3.0.3
info:
  title: Couchbase Search Advanced API
  description: |-
    The Advanced Search REST APIs are provided by the Search service.
    These APIs enable you to manage and query Search index partitions and to specify advanced settings.
  version: '7.6'

servers:
  - url: '{scheme}://{host}:{port}'
    description: The URL scheme, host, and port are as follows.
    variables:
      scheme:
        default: http
        description: |-
          The URL scheme.
          Use `https` for secure access.
        enum:
          - http
          - https
      host:
        default: localhost
        description: The host name or IP address of a node running the Search Service.
      port:
        default: "8094"
        description: |-
          The Search Service REST port.
          Use `18094` for secure access.
        enum:
          - "8094"
          - "18094"

tags:
  - name: Definition
    x-displayName: Index Partition Definition
    description: Operations for Search index partition definition.
  - name: Query
    x-displayName: Index Partition Querying
    description: Operations for querying Search index partitions.
  - name: Quota
    x-displayName: Search Memory Quota
    description: Operations for managing Search memory quota.

paths:
  /api/pindex:
    get:
      operationId: getPartition
      summary: Get Index Partition Information
      description: Get information about a Search index partition.
      tags:
        - Definition
      responses:
        '200':
          description: A JSON object containing the Search index partition information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/indexPartition'
              example:
                $ref: '../../../docs/modules/fts-rest-advanced/examples/get-partition.json'
      security:
        - Read: []

  /api/pindex/{pindexName}:
    get:
      operationId: getPartitionName
      summary: Get Index Partition by Name
      description: Get information about a specific Search index partition by name.
      tags:
        - Definition
      parameters:
        - name: pindexName
          in: path
          required: true
          schema:
            type: string
          description: The name of the Search index partition.
      responses:
        '200':
          description: Success
      security:
        - Read: []

  /api/pindex/{pindexName}/count:
    get:
      operationId: getPartitionCount
      summary: Get Index Partition Document Count
      description: Get the document count of a specific Search index partition.
      tags:
        - Query
      parameters:
        - name: pindexName
          in: path
          required: true
          schema:
            type: string
          description: The name of the Search index partition.
      responses:
        '200':
          description: The Search Service returns a response that includes the status `ok`.
          content:
            application/json:
              schema:
                $ref: '../index/index.yaml#/components/schemas/DocumentCount'
      security:
        - Read: []

  /api/pindex/{pindexName}/query:
    post:
      operationId: queryPartition
      summary: Query Index Partition
      description: Execute a query against a specific Search index partition by name.
      tags:
        - Query
      parameters:
        - name: pindexName
          in: path
          required: true
          schema:
            type: string
          description: The name of the Search index partition.
      requestBody:
        required: true
        description: |-
          A JSON object to define the settings for your Search query.
          For more information about how to create a Search query JSON object, see [Search Request JSON Properties](../search/search-request-params.html).
        content:
          application/json:
            schema:
              $ref: '../index/index.yaml#/components/schemas/QueryRequest'
      responses:
        '200':
          description: |-
            The response object has a status section that must be checked for every request.
            Under nearly all circumstances, the query response will be HTTP 200 even though individual index shards (partitions) may encounter a timeout or return an error.
          content:
            application/json:
              schema:
                $ref: '../index/index.yaml#/components/schemas/QueryResponse'
      security:
        - Write: []

  /pools/default:
    post:
      operationId: setFtsMemoryQuota
      summary: Set Search Memory Quota
      description: Sets the memory quota for the Search Service.
      tags:
        - Quota
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ftsMemoryQuota:
                  type: integer
                  description: The memory quota for the Search service.
                  example: 512
                  x-has-example: true
      responses:
        '200':
          description: Memory quota set.
      security:
        - Manage: []

components:
  schemas:
    indexPartition:
      type: object
      title: Index Partitions
      properties:
        pindexes:
          $ref: '#/components/schemas/indexPartitionPIndex'
        status:
          description: The status of the request.
          type: string

    indexPartitionPIndex:
      type: object
      title: Index Partitions Wrapper
      description: An object containing information about 1 or more Search index partitions.
      additionalProperties:
        x-additionalPropertiesName: Partition Name
        $ref: '#/components/schemas/indexPartitionPIndexInner'

    indexPartitionPIndexInner:
      type: object
      title: Index Partition
      description: |-
        An object containing information about a single Search index partition.
        The name of the property is the name of the Search index partition.
      properties:
        indexName:
          $ref: '../index/index.yaml#/components/schemas/CommonIndexName'
        indexParams:
          $ref: '../index/index.yaml#/components/schemas/CommonIndexParams'
        indexType:
          $ref: '../index/index.yaml#/components/schemas/CommonIndexType'
        indexUUID:
          $ref: '../index/index.yaml#/components/schemas/CommonIndexUUID'
        name:
          $ref: '../index/index.yaml#/components/schemas/CommonPIndexName'
        sourceName:
          $ref: '../index/index.yaml#/components/schemas/CommonSourceName'
        sourceParams:
          $ref: '../index/index.yaml#/components/schemas/CommonSourceParams'
        sourcePartitions:
          type: string
        sourceType:
          $ref: '../index/index.yaml#/components/schemas/CommonSourceType'
        sourceUUID:
          $ref: '../index/index.yaml#/components/schemas/CommonSourceUUID'
        uuid:
          $ref: '../index/index.yaml#/components/schemas/CommonPIndexUUID'

  securitySchemes:
    Manage:
      type: http
      scheme: basic
      description: |-
        You must have the **Search Admin** role, with FTS Manage permissions on the required bucket.

    Read:
      type: http
      scheme: basic
      description: |-
        You must have the **Search Reader** or **Search Admin** role, with FTS Read permissions on the required bucket.

    Write:
      type: http
      scheme: basic
      description: |-
        You must have the **Search Admin** role, with FTS Write permissions on the required bucket.
